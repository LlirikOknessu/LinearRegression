data_prep:
  train_test_ratio: 0.7
  train_val_ratio: 0.9
  random_state: 42

linear_regression:
  model_name: 'LinearRegression'

decision_tree:
  DecisionTree:
    max_depth: [ 2, 4, 6, 7, 8, 9, 10, 12 ]
    splitter: [ 'best', 'random' ]
    min_samples_split: [ 2, 3, 4 ]
    min_samples_leaf: [ 1, 2, 3, 4 ]
  RandomForest:
    n_estimators: [1, 2, 5, 10, 15]
    max_depth: [ 2, 4, 6, 7, 8, 9, 10, 12 ]
    min_samples_split: [ 2, 3, 4, 6, 7 ]
    min_samples_leaf: [ 1, 2, 3, 4 ]
    n_jobs: [-1]
  ExtraTree:
    n_estimators: [1, 2, 5, 10, 15]
    max_depth: [ 2, 4, 6, 7, 8, 9, 10, 12 ]
    min_samples_split: [ 2, 3, 4, 10, 15 ]
    min_samples_leaf: [ 1, 2, 3, 4, 18, 48 ]
    n_jobs: [-1]

xgboost:
  n_estimators: [15, 50, 100]
  max_depth: [3, 4, 5, 9, 15, 18]
  gamma: [1, 3, 5, 7, 9]
  min_child_weight: [1, 3, 5, 7, 9]
  verbosity: [0]

catboost:
  n_estimators: [50, 80]
  max_depth: [ 3, 4, 5, 9, 12]
  silent: [True]

NeuralNetwork:
  n_of_neurons: [64, 128, 256]
  batch_size: [64, 96, 128]
  buffer_size: 128
  learning_rate: [0.1, 0.05, 0.01, 0.005]
  epochs: 100
NeuralNetwork_full:
  n_of_neurons: 64
  batch_size: 64
  learning_rate: 0.1
  epochs: 100
  buffer_size: 128