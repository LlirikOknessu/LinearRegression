data_preparation:
  train_test_ratio: 0.7
  train_val_ratio: 0.9
  random_state: 42

linear_regression:
  model_name: 'LinearRegression'

decision_tree:
  DecisionTree:
    max_depth: [ 2, 4, 6, 7 ]
    splitter: ['best', 'random']
    min_samples_split: [ 2, 3, 4 ]
    min_samples_leaf: [ 1, 2, 3, 4 ]
  RandomForest:
    n_estimators: [ 1, 2, 5, 10, 15 ]
    max_depth: [ 2, 4, 6, 7 ]
    min_samples_split: [ 2, 3, 4, 6, 7 ]
    min_samples_leaf: [ 1, 2, 3, 4 ]
  ExtraTree:
    n_estimators: [ 1, 2, 5, 10, 15 ]
    max_depth: [ 2, 4, 6, 7 ]
    min_samples_split: [ 2, 3, 4, 10, 15 ]
    min_samples_leaf: [ 1, 2, 3, 4, 18, 48 ]

CatBoost:
  n_estimators: [300, 350, 400, 450, 500]
  max_depth: [2, 3, 4, 5]
  learning_rate: [ 0.7, 0.8, 0.9]
  subsample: [ 0.05, 0.1, 0.15, 0.2 ]

XGBoost:
  n_estimators: [3, 4, 7, 12, 17]
  max_depth: [2, 3, 4, 5]
  learning_rate: [ 0.7, 0.8, 0.9]
  min_child_weight: [3, 5, 7 ]
  subsample: [ 0.2, 0.3, 0.5, 0.7 ]

NeuralNetwork:
  n_of_neurons: [ 512 ]
  batch_size: [64]
  buffer_size: 128
  learning_rate: [0.001]
  epochs: 400
